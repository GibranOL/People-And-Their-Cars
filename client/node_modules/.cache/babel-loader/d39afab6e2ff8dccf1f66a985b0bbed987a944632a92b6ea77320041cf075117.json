{"ast":null,"code":"var _jsxFileName = \"/Users/gibranol/Documents/MWDD/People-n-Cars/client/src/components/listItems/ContactCard.js\";\nimport { Card } from 'antd';\nimport UpdatePerson from '../forms/UpdatePerson';\nimport RemovePerson from '../buttons/RemovePerson';\nimport CarCard from './CarCard';\nimport { EditOutlined } from '@ant-design/icons';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactCard = ({\n  id,\n  firstName,\n  lastName,\n  cars = []\n}) => {\n  const styles = getStyles();\n  const handleButtonClick = () => {\n    setEditMode(!editMode);\n  };\n  console.log(`Rendering ContactCard for ${firstName} ${lastName}`, cars);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: `${firstName} ${lastName}`,\n    style: styles.card,\n    actions: [/*#__PURE__*/_jsxDEV(EditOutlined, {\n      onClick: handleButtonClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(RemovePerson, {\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)],\n    children: cars.length > 0 ? cars.map(car => /*#__PURE__*/_jsxDEV(CarCard, {\n      id: car.id,\n      year: car.year,\n      make: car.make,\n      model: car.model,\n      price: car.price,\n      owner: {\n        id,\n        firstName,\n        lastName\n      }\n    }, car.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No cars available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = ContactCard;\nconst getStyles = () => ({\n  card: {\n    width: '600px',\n    marginBottom: '20px'\n  }\n});\nexport default ContactCard;\nvar _c;\n$RefreshReg$(_c, \"ContactCard\");","map":{"version":3,"names":["Card","UpdatePerson","RemovePerson","CarCard","EditOutlined","useState","jsxDEV","_jsxDEV","ContactCard","id","firstName","lastName","cars","styles","getStyles","handleButtonClick","setEditMode","editMode","console","log","title","style","card","actions","onClick","fileName","_jsxFileName","lineNumber","columnNumber","children","length","map","car","year","make","model","price","owner","_c","width","marginBottom","$RefreshReg$"],"sources":["/Users/gibranol/Documents/MWDD/People-n-Cars/client/src/components/listItems/ContactCard.js"],"sourcesContent":["import { Card } from 'antd';\nimport UpdatePerson from '../forms/UpdatePerson';\nimport RemovePerson from '../buttons/RemovePerson';\nimport CarCard from './CarCard';\nimport { EditOutlined } from '@ant-design/icons';\nimport { useState } from 'react';\n\nconst ContactCard = ({ id, firstName, lastName, cars = [] }) => {\n  const styles = getStyles();\n\n\n  const handleButtonClick = () => {\n    setEditMode(!editMode);\n  };\n  console.log(`Rendering ContactCard for ${firstName} ${lastName}`, cars); \n\n  return (\n    <Card\n      title={`${firstName} ${lastName}`} \n      style={styles.card}\n      actions={[\n        <EditOutlined onClick={handleButtonClick} />,\n        <RemovePerson id={id} />\n      ]}\n    >\n      {cars.length > 0 ? (\n        cars.map(car => (\n          <CarCard\n            key={car.id}\n            id={car.id}\n            year={car.year}\n            make={car.make}\n            model={car.model}\n            price={car.price}\n            owner={{ id, firstName, lastName }}\n          />\n        ))\n      ) : (\n        <p>No cars available</p>\n      )}\n    </Card>\n  );\n};\n\nconst getStyles = () => ({\n  card: {\n    width: '600px',\n    marginBottom: '20px'\n  }\n});\n\nexport default ContactCard;"],"mappings":";AAAA,SAASA,IAAI,QAAQ,MAAM;AAC3B,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,WAAW,GAAGA,CAAC;EAAEC,EAAE;EAAEC,SAAS;EAAEC,QAAQ;EAAEC,IAAI,GAAG;AAAG,CAAC,KAAK;EAC9D,MAAMC,MAAM,GAAGC,SAAS,CAAC,CAAC;EAG1B,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BC,WAAW,CAAC,CAACC,QAAQ,CAAC;EACxB,CAAC;EACDC,OAAO,CAACC,GAAG,CAAC,6BAA6BT,SAAS,IAAIC,QAAQ,EAAE,EAAEC,IAAI,CAAC;EAEvE,oBACEL,OAAA,CAACP,IAAI;IACHoB,KAAK,EAAE,GAAGV,SAAS,IAAIC,QAAQ,EAAG;IAClCU,KAAK,EAAER,MAAM,CAACS,IAAK;IACnBC,OAAO,EAAE,cACPhB,OAAA,CAACH,YAAY;MAACoB,OAAO,EAAET;IAAkB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5CrB,OAAA,CAACL,YAAY;MAACO,EAAE,EAAEA;IAAG;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CACxB;IAAAC,QAAA,EAEDjB,IAAI,CAACkB,MAAM,GAAG,CAAC,GACdlB,IAAI,CAACmB,GAAG,CAACC,GAAG,iBACVzB,OAAA,CAACJ,OAAO;MAENM,EAAE,EAAEuB,GAAG,CAACvB,EAAG;MACXwB,IAAI,EAAED,GAAG,CAACC,IAAK;MACfC,IAAI,EAAEF,GAAG,CAACE,IAAK;MACfC,KAAK,EAAEH,GAAG,CAACG,KAAM;MACjBC,KAAK,EAAEJ,GAAG,CAACI,KAAM;MACjBC,KAAK,EAAE;QAAE5B,EAAE;QAAEC,SAAS;QAAEC;MAAS;IAAE,GAN9BqB,GAAG,CAACvB,EAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOZ,CACF,CAAC,gBAEFrB,OAAA;MAAAsB,QAAA,EAAG;IAAiB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACxB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX,CAAC;AAACU,EAAA,GAnCI9B,WAAW;AAqCjB,MAAMM,SAAS,GAAGA,CAAA,MAAO;EACvBQ,IAAI,EAAE;IACJiB,KAAK,EAAE,OAAO;IACdC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAehC,WAAW;AAAC,IAAA8B,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}