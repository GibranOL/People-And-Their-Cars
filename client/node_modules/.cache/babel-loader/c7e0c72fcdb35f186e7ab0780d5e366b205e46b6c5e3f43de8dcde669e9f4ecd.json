{"ast":null,"code":"var _jsxFileName = \"/Users/gibranol/Documents/MWDD/People-n-Cars/client/src/components/forms/UpdateContact.js\",\n  _s = $RefreshSig$();\nimport { useMutation } from '@apollo/client';\nimport { Button, Form, Input } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { UPDATE_CONTACT } from '../../graphql/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateContact = props => {\n  _s();\n  const {\n    id,\n    firstName,\n    lastName\n  } = props;\n  const [form] = Form.useForm();\n  const [, forceUpdate] = useState();\n  useEffect(() => {\n    forceUpdate({});\n  }, []);\n  const [updateContact] = useMutation(UPDATE_CONTACT);\n  const onFinish = values => {\n    const {\n      firstName,\n      lastName\n    } = values;\n    updateContact({\n      variables: {\n        id,\n        firstName,\n        lastName\n      }\n    });\n    props.onButtonClick();\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    name: \"update-contact-form\",\n    layout: \"inline\",\n    onFinish: onFinish,\n    initialValues: {\n      firstName,\n      lastName\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"firstName\",\n      rules: [{\n        required: true,\n        message: 'Please enter a first name'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"i.e. John\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"lastName\",\n      rules: [{\n        required: true,\n        message: 'Please enter a last name'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"i.e. Smith\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      shouldUpdate: true,\n      children: () => /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        disabled: !form.isFieldTouched('firstName') && !form.isFieldTouched('lastName') || form.getFieldError().filter(({\n          errors\n        }) => errors.length).length,\n        children: \"Update Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: props.onButtonClick,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateContact, \"4n8NocGPOaZaO3Za9h01wbNYKR0=\", false, function () {\n  return [Form.useForm, useMutation];\n});\n_c = UpdateContact;\nexport default UpdateContact;\nvar _c;\n$RefreshReg$(_c, \"UpdateContact\");","map":{"version":3,"names":["useMutation","Button","Form","Input","useEffect","useState","UPDATE_CONTACT","jsxDEV","_jsxDEV","UpdateContact","props","_s","id","firstName","lastName","form","useForm","forceUpdate","updateContact","onFinish","values","variables","onButtonClick","name","layout","initialValues","children","Item","rules","required","message","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","shouldUpdate","type","htmlType","disabled","isFieldTouched","getFieldError","filter","errors","length","onClick","_c","$RefreshReg$"],"sources":["/Users/gibranol/Documents/MWDD/People-n-Cars/client/src/components/forms/UpdateContact.js"],"sourcesContent":["import { useMutation } from '@apollo/client'\nimport { Button, Form, Input } from 'antd'\nimport { useEffect, useState } from 'react'\nimport { UPDATE_CONTACT } from '../../graphql/queries'\n\nconst UpdateContact = props => {\n  const { id, firstName, lastName} = props\n  const [form] = Form.useForm()\n  const [, forceUpdate] = useState()\n\n  useEffect(() => {\n    forceUpdate({})\n  }, [])\n\n  const [updateContact] = useMutation(UPDATE_CONTACT)\n\n  const onFinish = values => {\n    const { firstName, lastName } = values\n\n    updateContact({\n      variables: {\n        id,\n        firstName,\n        lastName\n      }\n    })\n    props.onButtonClick()\n  }\n\n  return (\n    <Form\n      form={form}\n      name='update-contact-form'\n      layout='inline'\n      onFinish={onFinish}\n      initialValues={{\n        firstName,\n        lastName\n      }}\n    >\n      <Form.Item\n        name='firstName'\n        rules={[{ required: true, message: 'Please enter a first name' }]}\n      >\n        <Input placeholder='i.e. John' />\n      </Form.Item>\n      <Form.Item name='lastName' rules={[{ required: true, message: 'Please enter a last name' }]}>\n        <Input placeholder='i.e. Smith' />\n      </Form.Item>\n      <Form.Item shouldUpdate={true}>\n        {() => (\n          <Button\n            type='primary'\n            htmlType='submit'\n            disabled={\n              (!form.isFieldTouched('firstName') && !form.isFieldTouched('lastName')) ||\n              form.getFieldError().filter(({ errors }) => errors.length).length\n            }\n          >\n            Update Contact\n          </Button>\n        )}\n      </Form.Item>\n      <Button onClick={props.onButtonClick}>Cancel</Button>\n    </Form>\n  )\n\n}\n\nexport default UpdateContact\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AAC1C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,aAAa,GAAGC,KAAK,IAAI;EAAAC,EAAA;EAC7B,MAAM;IAAEC,EAAE;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGJ,KAAK;EACxC,MAAM,CAACK,IAAI,CAAC,GAAGb,IAAI,CAACc,OAAO,CAAC,CAAC;EAC7B,MAAM,GAAGC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EAElCD,SAAS,CAAC,MAAM;IACda,WAAW,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACC,aAAa,CAAC,GAAGlB,WAAW,CAACM,cAAc,CAAC;EAEnD,MAAMa,QAAQ,GAAGC,MAAM,IAAI;IACzB,MAAM;MAAEP,SAAS;MAAEC;IAAS,CAAC,GAAGM,MAAM;IAEtCF,aAAa,CAAC;MACZG,SAAS,EAAE;QACTT,EAAE;QACFC,SAAS;QACTC;MACF;IACF,CAAC,CAAC;IACFJ,KAAK,CAACY,aAAa,CAAC,CAAC;EACvB,CAAC;EAED,oBACEd,OAAA,CAACN,IAAI;IACHa,IAAI,EAAEA,IAAK;IACXQ,IAAI,EAAC,qBAAqB;IAC1BC,MAAM,EAAC,QAAQ;IACfL,QAAQ,EAAEA,QAAS;IACnBM,aAAa,EAAE;MACbZ,SAAS;MACTC;IACF,CAAE;IAAAY,QAAA,gBAEFlB,OAAA,CAACN,IAAI,CAACyB,IAAI;MACRJ,IAAI,EAAC,WAAW;MAChBK,KAAK,EAAE,CAAC;QAAEC,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE;MAA4B,CAAC,CAAE;MAAAJ,QAAA,eAElElB,OAAA,CAACL,KAAK;QAAC4B,WAAW,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACZ3B,OAAA,CAACN,IAAI,CAACyB,IAAI;MAACJ,IAAI,EAAC,UAAU;MAACK,KAAK,EAAE,CAAC;QAAEC,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE;MAA2B,CAAC,CAAE;MAAAJ,QAAA,eAC1FlB,OAAA,CAACL,KAAK;QAAC4B,WAAW,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACZ3B,OAAA,CAACN,IAAI,CAACyB,IAAI;MAACS,YAAY,EAAE,IAAK;MAAAV,QAAA,EAC3BA,CAAA,kBACClB,OAAA,CAACP,MAAM;QACLoC,IAAI,EAAC,SAAS;QACdC,QAAQ,EAAC,QAAQ;QACjBC,QAAQ,EACL,CAACxB,IAAI,CAACyB,cAAc,CAAC,WAAW,CAAC,IAAI,CAACzB,IAAI,CAACyB,cAAc,CAAC,UAAU,CAAC,IACtEzB,IAAI,CAAC0B,aAAa,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;UAAEC;QAAO,CAAC,KAAKA,MAAM,CAACC,MAAM,CAAC,CAACA,MAC5D;QAAAlB,QAAA,EACF;MAED;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IACT;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC,eACZ3B,OAAA,CAACP,MAAM;MAAC4C,OAAO,EAAEnC,KAAK,CAACY,aAAc;MAAAI,QAAA,EAAC;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAGX,CAAC;AAAAxB,EAAA,CA9DKF,aAAa;EAAA,QAEFP,IAAI,CAACc,OAAO,EAOHhB,WAAW;AAAA;AAAA8C,EAAA,GAT/BrC,aAAa;AAgEnB,eAAeA,aAAa;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}